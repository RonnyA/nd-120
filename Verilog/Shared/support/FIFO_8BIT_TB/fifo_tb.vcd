$date
	Sun Jun  2 15:26:36 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module FIFO_testbench $end
$var wire 1 ! full $end
$var wire 1 " empty $end
$var wire 8 # data_out [7:0] $end
$var reg 8 $ data_in [7:0] $end
$var reg 1 % rd_en $end
$var reg 1 & rst $end
$var reg 1 ' wr_en $end
$scope module fifo_inst $end
$var wire 8 ( data_in [7:0] $end
$var wire 1 % rd_en $end
$var wire 1 & rst $end
$var wire 1 ' wr_en $end
$var wire 1 ! full $end
$var wire 1 " empty $end
$var reg 8 ) data_out [7:0] $end
$var reg 5 * fifo_count [4:0] $end
$var reg 4 + rd_ptr [3:0] $end
$var reg 4 , wr_ptr [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ,
b0 +
b0 *
b0 )
b0 (
0'
1&
0%
b0 $
b0 #
1"
0!
$end
#10
0&
#20
0"
b1 *
b1 ,
1'
b10100101 $
b10100101 (
#30
0'
#40
b10 *
b10 ,
1'
b1011010 $
b1011010 (
#50
0'
#60
1"
b0 *
b0 ,
1&
#70
0&
#80
0"
b1 *
b1 ,
1'
b10110101 $
b10110101 (
#90
0'
#100
b10 *
b10 ,
1'
b1101011 $
b1101011 (
#110
0'
#120
b1 *
b1 +
b10110101 #
b10110101 )
1%
#130
0%
#140
1"
b0 *
b10 +
b1101011 #
b1101011 )
1%
#150
0%
#170
0"
b1 *
b11 ,
1'
b11110000 $
b11110000 (
#180
0'
#190
b10 *
b100 ,
1'
b11110001 $
b11110001 (
#200
0'
#210
b11 *
b101 ,
1'
b11110010 $
b11110010 (
#220
0'
#230
b100 *
b110 ,
1'
b11110011 $
b11110011 (
#240
0'
#250
b101 *
b111 ,
1'
b11110100 $
b11110100 (
#260
0'
#270
b110 *
b1000 ,
1'
b11110101 $
b11110101 (
#280
0'
#290
b111 *
b1001 ,
1'
b11110110 $
b11110110 (
#300
0'
#310
b1000 *
b1010 ,
1'
b11110111 $
b11110111 (
#320
0'
#330
b1001 *
b1011 ,
1'
b11111000 $
b11111000 (
#340
0'
#350
b1010 *
b1100 ,
1'
b11111001 $
b11111001 (
#360
0'
#370
b1011 *
b0 ,
1'
b11111010 $
b11111010 (
#380
0'
#390
b1100 *
b1 ,
1'
b11111011 $
b11111011 (
#400
0'
#410
1!
b1101 *
b10 ,
1'
b11111100 $
b11111100 (
#420
0'
#430
1'
b11111101 $
b11111101 (
#440
0'
#460
0!
b1100 *
b11 +
b11110000 #
b11110000 )
1%
#470
0%
#480
b1011 *
b100 +
b11110001 #
b11110001 )
1%
#490
0%
#500
b1010 *
b101 +
b11110010 #
b11110010 )
1%
#510
0%
#520
b1001 *
b110 +
b11110011 #
b11110011 )
1%
#530
0%
#540
b1000 *
b111 +
b11110100 #
b11110100 )
1%
#550
0%
#560
b111 *
b1000 +
b11110101 #
b11110101 )
1%
#570
0%
#580
b110 *
b1001 +
b11110110 #
b11110110 )
1%
#590
0%
#600
b101 *
b1010 +
b11110111 #
b11110111 )
1%
#610
0%
#620
b100 *
b1011 +
b11111000 #
b11111000 )
1%
#630
0%
#640
b11 *
b1100 +
b11111001 #
b11111001 )
1%
#650
0%
#660
b10 *
b0 +
b11111010 #
b11111010 )
1%
#670
0%
#680
b1 *
b1 +
b11111011 #
b11111011 )
1%
#690
0%
#700
1"
b0 *
b10 +
b11111100 #
b11111100 )
1%
#710
0%
#720
b0 #
b0 )
1%
#730
0%
#740
1%
#750
0%
#760
1%
#770
0%
#780
1%
#790
0%
#800
1%
#810
0%
#820
1%
#830
0%
#840
1%
#850
0%
#870
